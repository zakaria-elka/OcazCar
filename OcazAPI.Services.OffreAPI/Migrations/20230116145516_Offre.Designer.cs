// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OcazAPI.Services.OffreAPI.offreDbContexts;

#nullable disable

namespace OcazAPI.Services.OffreAPI.Migrations
{
    [DbContext(typeof(OffreDbContext))]
    [Migration("20230116145516_Offre")]
    partial class Offre
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OcazAPI.Services.OffreAPI.Models.Offre", b =>
                {
                    b.Property<int>("OffreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OffreId"));

                    b.Property<int>("AgentId")
                        .HasColumnType("int");

                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<string>("DatePub")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OffreCarName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("Ville")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OffreId");

                    b.ToTable("Offres");

                    b.HasData(
                        new
                        {
                            OffreId = 1,
                            AgentId = 1,
                            CarId = 1,
                            DatePub = "12 janvier 2022",
                            OffreCarName = "Bwm Serie3 2012",
                            Price = 150000.0,
                            Ville = "Rabat"
                        },
                        new
                        {
                            OffreId = 2,
                            AgentId = 2,
                            CarId = 2,
                            DatePub = "13 fevrier 2022 ",
                            OffreCarName = "Toyota corolla 2015",
                            Price = 100000.0,
                            Ville = "Casablanca"
                        },
                        new
                        {
                            OffreId = 3,
                            AgentId = 3,
                            CarId = 3,
                            DatePub = "20 septembre 2022 ",
                            OffreCarName = "Hyundai tucson 2016",
                            Price = 170000.0,
                            Ville = "Oujda"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
